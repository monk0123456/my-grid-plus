(def line "function my_match(table_name)\n{\n   match {\n     table_name == \"Customers\": query_sql(\"select * from public.Customers limit 0, 5\");\n     table_name == \"Employees\": query_sql(\"select * from wudafu.Employees limit 0, 5\");\n     else query_sql(\"select * from wudagui.OrderDetails limit 0, 5\");\n   }\n}")
(def ast (first (my-smart-sql/get-ast line)))
(def my-context {:input-params #{} :let-params {} :last-item nil :inner-func #{} :up-my-context nil})
(def func-context (assoc my-context :input-params (apply conj (-> my-context :input-params) (-> ast :args-lst))))
ast
(my-smart-clj/body-to-clj ignite 0 ast func-context)
(my-smart-clj/ast-to-clj ignite 0 ast func-context)


(def line "function my_match(table_name)\n{\n   match {\n     table_name == \"Customers\": query_sql(\"select * from public.Customers limit 0, 5\");\n     table_name == \"Employees\": query_sql(\"select * from wudafu.Employees limit 0, 5\");\n     else query_sql(\"select * from wudagui.OrderDetails limit 0, 5\");\n   }\n}")
(my-smart-clj/smart-to-clj ignite 0 line)


function my_trans(OrderID, CustomerID)
{
   lst.add(["INSERT INTO wudagui.Orders (OrderID, CustomerID) Values (?, ?);", [OrderID, CustomerID]);
}




















































